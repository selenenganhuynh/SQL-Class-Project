/* PROBLEM NO D */
SELECT 		COURSE_DESCRIPTION, COURSE_FEE
FROM 		COURSE
WHERE		COURSE_NUM > 1001;

SELECT 		SESSION_NUM, COURSE_NUM
FROM 		SESSIONS 
WHERE 		SESSION_NUM = 1235;

SELECT 		SESSION_NUM, ENROLL_FEEPAID
FROM 		ENROLL 
WHERE 		SESSION_NUM = 1234;

SELECT 		COMP_NAME
FROM 		COMPANY
WHERE 		COMP_CODE < 103;

SELECT 		OPENING_DESCRIPTION, OPENING_AVAILABLE
FROM 		OPENING
WHERE 		OPENING_NUM <= 1222;

SELECT 		CAND_LNAME 
FROM 		CANDIDATE 
WHERE 		CAND_NUM < 4;

/* PROBLEM NO E */
SELECT		DISTINCT COURSE_NUM, COURSE_FEE
FROM		COURSE
GROUP BY	COURSE_NUM, COURSE_FEE
ORDER BY	COURSE_FEE;

SELECT      	DISTINCT SESSION_NUM, COURSE_NUM
FROM        	SESSIONS 
GROUP BY    	SESSION_NUM, COURSE_NUM
ORDER BY    	SESSION_NUM;

SELECT      	OPENING_NUM, COMP_CODE, OPENING_DESCRIPTION
FROM        	OPENING
GROUP BY    	OPENING_NUM, COMP_CODE, OPENING_DESCRIPTION
ORDER BY    	OPENING_NUM;

SELECT      	CAND_LNAME 
FROM        	CANDIDATE 
GROUP BY    	CAND_NUM, CAND_LNAME
ORDER BY    	CAND_NUM;

/* PROBLEM NO F */
SELECT		DISTINCT COURSE_NUM, COURSE_FEE
FROM		COURSE
GROUP BY	COURSE_NUM, COURSE_FEE
HAVING		COURSE_FEE > 150
ORDER BY	COURSE_NUM;

SELECT      	DISTINCT SESSION_NUM, COURSE_NUM
FROM        	SESSIONS 
GROUP BY    	SESSION_NUM, COURSE_NUM
HAVING      	SESSION_NUM>1236
ORDER BY    	COURSE_NUM;

SELECT      	OPENING_NUM, COMP_CODE, OPENING_DESCRIPTION
FROM        	OPENING
GROUP BY    	OPENING_NUM, COMP_CODE, OPENING_DESCRIPTION
HAVING      	OPENING_NUM < 1223
ORDER BY    	OPENING_NUM;

SELECT      	CAND_LNAME 
FROM        	CANDIDATE 
GROUP BY    	CAND_NUM, CAND_LNAME    
HAVING      	CAND_NUM < 3
ORDER BY    	CAND_NUM;


/* PROBLEM NO G */
SELECT		*
FROM		COURSE NATURAL JOIN QUALIFICATION
ORDER BY 	QUAL_CODE;

SELECT      	* 
FROM        	SESSIONS NATURAL JOIN ENROLL
ORDER BY    	SESSION_NUM;

SELECT      	COMPANY.COMP_NAME, OPENING.OPENING_DESCRIPTION, OPENING.OPENING_AVAILABLE
FROM        	COMPANY JOIN OPENING
ON          	COMPANY.COMP_CODE = OPENING.COMP_CODE;

SELECT      	JOBHISTORY.JH_ID, CANDIDATE.CAND_NUM 
FROM        	JOBHISTORY INNER JOIN CANDIDATE 
ON          	CANDIDATE.CAND_NUM = JOBHISTORY.CAND_NUM;


/* PROBLEM NO H */
SELECT		COURSE.COURSE_NUM, COURSE.COURSE_DESCRIPTION, QUALIFICATION.QUAL_DESCRIPTION
FROM		COURSE LEFT JOIN QUALIFICATION 
ON 		COURSE.QUAL_CODE = QUALIFICATION.QUAL_CODE;

SELECT      	SESSIONS.SESSION_NUM,SESSIONS.SESSION_FEE,ENROLL.CAND_NUM
FROM        	SESSIONS LEFT JOIN ENROLL
ON          	SESSIONS.SESSION_NUM=ENROLL.SESSION_NUM;

SELECT      	JOBHISTORY.JH_ID, CANDIDATE.CAND_NUM 
FROM        	JOBHISTORY LEFT JOIN CANDIDATE 
ON          	CANDIDATE.CAND_NUM = JOBHISTORY.CAND_NUM
WHERE       	CANDIDATE.CAND_NUM < 3;

SELECT      	COMPANY.COMP_NAME, OPENING.OPENING_DESCRIPTION, OPENING.OPENING_AVAILABLE
FROM        	COMPANY LEFT JOIN OPENING
ON          	COMPANY.COMP_CODE = OPENING.COMP_CODE
WHERE       	COMPANY.COMP_CODE < 104;

/* PROBLEM NO I */
SELECT		COURSE_NUM, COURSE_DESCRIPTION, COURSE_FEE
FROM		COURSE
WHERE		EXISTS(	SELECT	1
			FROM	COURSE
			WHERE	COURSE_FEE > 150);

SELECT      	CAND_NUM 
FROM        	CANDIDATE 
WHERE       	CAND_NUM IN( SELECT CAND_NUM 
            	FROM JOBHISTORY);
            
SELECT      	OPENING_DESCRIPTION, OPENING_AVAILABLE
FROM        	OPENING
WHERE       	COMP_CODE = (SELECT MIN(COMP_CODE) 
            	FROM COMPANY);
            
SELECT      	SESSION_NUM,SESSION_FEE
FROM        	SESSIONS
WHERE       	EXISTS(SELECT 1
            	FROM SESSIONS
            	WHERE SESSION_NUM < 1237);  

/* PROBLEM NO J */
SELECT 		COURSE_NUM, COURSE_DESCRIPTION, AverageFee
FROM   		(SELECT   COURSE_NUM, COURSE_DESCRIPTION,
       		          AVG(COURSE_FEE) AS AverageFee	  
        	FROM     COURSE
        	GROUP BY COURSE_NUM, COURSE_DESCRIPTION)
ORDER BY 	COURSE_NUM;

SELECT 		COURSE_NUM, COURSE_DESCRIPTION, AverageFee
FROM   		(SELECT   COURSE_NUM, COURSE_DESCRIPTION,
       		          AVG(COURSE_FEE) AS AverageFee	  
        	FROM     COURSE
        	GROUP BY COURSE_NUM, COURSE_DESCRIPTION)
ORDER BY 	COURSE_NUM;

SELECT      	SESSION_NUM, SESSION_FEE,COURSE_NUM, AverageSessionFee
FROM        	(SELECT SESSION_NUM, SESSION_FEE,COURSE_NUM, Avg(SESSION_FEE) AS AverageSessionFee
            	FROM SESSIONS
            	GROUP BY COURSE_NUM,SESSION_NUM,SESSION_FEE)
ORDER BY    	SESSION_FEE;

SELECT      	PLACEMENT_NUM, AverageTotalHour
FROM        	(SELECT PLACEMENT_NUM, AVG(PLACEMENT_TOTALHOURS) AS AverageTotalHour
            	FROM PLACEMENT
            	GROUP BY PLACEMENT_NUM)
ORDER BY   	PLACEMENT_NUM;

/* PROBLEM NO K */
SELECT 		COURSE_NUM,
            	COURSE_DESCRIPTION,
            	(SELECT 	AVG(COURSE_FEE)
            	FROM 		COURSE) AS AverageFee
FROM   		COURSE;

SELECT      	SESSION_NUM,SESSION_FEE, 
            	(SELECT MAX(SESSION_FEE)
            	FROM   SESSIONS) AS MaxSessionFee
FROM 		SESSIONS;
	
SELECT      	CAND_NUM, 
            	(SELECT AVG(ENROLL_FEEPAID) FROM ENROLL) AS AverageFeePaid
		FROM CANDIDATE;

SELECT      	PLACEMENT_NUM, PLACEMENT_DATE, 
            	(SELECT MAX(PLACEMENT_TOTALHOURS) FROM PLACEMENT) AS MaxTotalHour
FROM        	PLACEMENT;